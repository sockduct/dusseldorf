"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'xnl^c9$uw@5iui!0=qk**ky2u4++(5+%=g=@4z%a6^m9y$wcrq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # Django built-ins:
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # 3rd party:
    'crispy_forms',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.github',

    # Local apps:
    'accounts',
    'paths',
    'posts',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [str(BASE_DIR.joinpath('templates'))],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# URL used to reference static assets (files):
STATIC_URL = '/static/'

# Location of static files directory for local development:
STATICFILES_DIRS = (str(BASE_DIR.joinpath('static')),)

# Location of static files in production (must be distinct name):
STATIC_ROOT = str(BASE_DIR.joinpath('staticfiles'))

# How to look for static file directories:
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]


# Custom User Model:
AUTH_USER_MODEL = 'accounts.CustomUser'


# Redirect defaults
LOGIN_REDIRECT_URL = 'post_list'
LOGOUT_REDIRECT_URL = 'post_list'


# Django Crispy Forms:
CRISPY_TEMPLATE_PACK = 'bootstrap4'


# Django All Auth Config:
SITE_ID = 1

# Authentication:
AUTHENTICATION_BACKENDS = (
    # Django default:
    'django.contrib.auth.backends.ModelBackend',

    # Addition for Django All Auth:
    'allauth.account.auth_backends.AuthenticationBackend',
)

# Django All Auth Settings:

# Change to allow E-mail only registration:
ACCOUNT_AUTHENTICATION_METHOD = 'email'
# Change to allow E-mail only registration:
ACCOUNT_EMAIL_REQUIRED = True
# To disable E-mail verification, can also set to 'mandatory':
# ACCOUNT_EMAIL_VERIFICATION = 'none'
# Overrides LOGOUT_REDIRECT_URL:
ACCOUNT_LOGOUT_REDIRECT = 'post_list'
# Default is None which asks user if they want to be remembered:
ACCOUNT_SESSION_REMEMBER = True
# Default is True:
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False
# Change to allow E-mail only registration:
ACCOUNT_UNIQUE_EMAIL = True
# Default is True, change to False to allow E-mail only registration:
ACCOUNT_USERNAME_REQUIRED = False

# E-mail:
# Use the console instead of a SMTP server/relay:
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
